{
  "app": {
    "title": "QiuYe Template",
    "fullTitle": "QiuYe React Template"
  },
  "common": {
    "confirm": "确认",
    "cancel": "取消",
    "save": "保存",
    "delete": "删除",
    "edit": "编辑",
    "add": "添加",
    "search": "搜索",
    "loading": "加载中...",
    "success": "成功",
    "error": "错误",
    "warning": "警告",
    "info": "信息"
  },
  "nav": {
    "home": "首页",
    "about": "关于",
    "loadingDebug": "调试",
    "dashboard": "仪表盘",
    "settings": "设置",
    "menu": "菜单",
    "navigation": "导航"
  },
  "theme": {
    "switchToDark": "切换到暗色模式",
    "switchToLight": "切换到亮色模式",
    "languageSelect": "语言选择",
    "appearance": "外观",
    "language": "语言"
  },
  "language": {
    "chinese": "中文",
    "english": "English"
  },
  "pages": {
    "home": {
      "badge": "全新 Tailwind CSS v4 支持",
      "title": "现代化 React 模板",
      "subtitle": "基于 React 19 + TypeScript + Vite + Tailwind CSS v4 构建的现代化项目脚手架，集成最佳实践，让你专注于业务开发。",
      "getStarted": "开始使用",
      "viewDocs": "查看文档",
      "github": "GitHub",
      "features": {
        "title": "✨ 核心特性",
        "subtitle": "我们精心挑选并集成了最优秀的工具和最佳实践",
        "items": {
          "fast": {
            "title": "⚡ 极速开发",
            "description": "基于 Vite 和 Tailwind CSS v4 的现代化构建体验",
            "badge": "v4"
          },
          "complete": {
            "title": "🔧 完整配置",
            "description": "TypeScript、ESLint、国际化等开箱即用",
            "badge": "Ready"
          },
          "outOfBox": {
            "title": "💝 开箱即用",
            "description": "集成最佳实践和常用组件库",
            "badge": "Best"
          },
          "typeSafe": {
            "title": "🛡️ 类型安全",
            "description": "完整的 TypeScript 类型定义和检查",
            "badge": "Safe"
          }
        }
      },
      "techStack": {
        "title": "🛠️ 技术栈",
        "description": "使用最新、最稳定的技术栈，确保项目的长期可维护性和高性能表现。"
      },
      "messages": {
        "getStarted": "🚀 欢迎开始使用本模板！",
        "docsInDev": "📚 文档功能正在开发中，敬请期待！"
      }
    },
    "about": {
      "title": "关于我们",
      "subtitle": "这是一个现代化的 React 项目脚手架，致力于为开发者提供最佳的开发体验和项目架构。",
      "features": {
        "title": "项目特色",
        "items": {
          "modern": {
            "title": "现代化架构",
            "description": "基于最新的 React 19 和 TypeScript 构建，拥抱现代化开发模式"
          },
          "elegant": {
            "title": "优雅的 UI",
            "description": "Shadcn/ui + Tailwind CSS v4 打造的精美界面和组件系统"
          },
          "dx": {
            "title": "开发体验",
            "description": "Vite 极速构建，TypeScript 类型安全，ESLint 代码规范"
          },
          "outOfBox": {
            "title": "开箱即用",
            "description": "预配置路由、状态管理、国际化、主题切换等常用功能"
          }
        }
      },
      "timeline": {
        "title": "发展历程",
        "items": {
          "init": {
            "title": "项目初始化",
            "description": "创建基础项目结构和配置"
          },
          "core": {
            "title": "核心功能集成",
            "description": "路由、状态管理、国际化等"
          },
          "tailwind": {
            "title": "Tailwind CSS v4 升级",
            "description": "采用最新版本的 Tailwind CSS"
          },
          "optimize": {
            "title": "持续优化",
            "description": "性能优化和开发体验提升"
          }
        }
      },
      "techStack": {
        "title": "技术栈",
        "description": "我们精心挑选了最优秀的工具和库，确保项目的现代化、可维护性和开发效率。"
      },
      "projectInfo": {
        "title": "项目信息",
        "version": "版本",
        "lastUpdate": "最后更新",
        "license": "许可证",
        "author": "作者",
        "github": "GitHub",
        "viewSource": "查看源码"
      },
      "thanks": {
        "title": "感谢",
        "content": "感谢所有开源项目的贡献者们，没有你们的努力就没有这个美好的开发生态。也感谢每一位使用这个模板的开发者，你们的反馈让项目变得更好。",
        "madeWithLove": "Made with Love",
        "starOnGitHub": "Star on GitHub"
      }
    },
    "notFound": {
      "title": "页面未找到",
      "description": "抱歉，您访问的页面不存在",
      "backHome": "返回首页"
    },
    "loadingDebug": {
      "title": "加载效果调试中心",
      "subtitle": "测试和调试各种加载组件的效果和性能",
      "autoTest": {
        "message": "自动测试中..."
      },
      "mainLoadingTest": {
        "title": "主加载组件测试",
        "durationLabel": "加载持续时间",
        "testMainLoading": "测试全局加载",
        "testSimpleLoading": "测试简单加载",
        "testMessage": "正在测试全局加载...",
        "startAutoTest": "启动自动测试",
        "stopAutoTest": "停止自动测试",
        "status": {
          "mainLoading": "全局加载",
          "simpleLoading": "简单加载",
          "autoTest": "自动测试",
          "showing": "显示中",
          "hidden": "隐藏",
          "running": "运行中",
          "stopped": "已停止"
        }
      },
      "globalApi": {
        "title": "全局加载API",
        "description": "使用全局加载控制器，可以在任何地方调用加载效果",
        "asyncTest": {
          "button": "测试异步操作",
          "message": "异步操作进行中..."
        },
        "delayedTest": {
          "button": "测试延迟显示",
          "message": "延迟显示加载中..."
        },
        "customText": {
          "button": "自定义文本"
        },
        "hide": {
          "button": "手动隐藏"
        },
        "examples": {
          "title": "代码示例",
          "comments": {
            "basicUsage": "// 基础用法",
            "customText": "// 自定义文本",
            "asyncWrapper": "// 异步操作包装"
          }
        }
      },
      "variants": {
        "title": "加载样式变体",
        "rotatingRing": "旋转圆环",
        "bouncingDots": "跳动圆点",
        "rhythmBars": "律动条形"
      },
      "preview": {
        "title": "简单加载组件预览"
      },
      "usage": {
        "title": "使用说明",
        "globalLoading": "全局单例化加载组件，可在任何地方通过API调用",
        "simpleLoading": "轻量级加载，适用于组件内部或局部区域",
        "debugFeatures": "可调节持续时间、手动触发、自动循环测试",
        "styleVariants": "展示不同风格的加载动画效果",
        "performance": "使用 React Spring 实现流畅的动画效果"
      }
    }
  },
  "toast": {
    "requestFailed": "请求失败",
    "unauthorized": "未授权，请重新登录",
    "forbidden": "拒绝访问",
    "notFound": "请求地址出错",
    "serverError": "服务器内部错误",
    "networkError": "网络错误"
  }
}