{
  "app": {
    "title": "QiuYe Template",
    "fullTitle": "QiuYe React Template"
  },
  "common": {
    "confirm": "Confirm",
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "add": "Add",
    "search": "Search",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "warning": "Warning",
    "info": "Info"
  },
  "nav": {
    "home": "Home",
    "about": "About",
    "loadingDebug": "Debug",
    "dashboard": "Dashboard",
    "settings": "Settings",
    "menu": "Menu",
    "navigation": "Navigation"
  },
  "theme": {
    "switchToDark": "Switch to dark mode",
    "switchToLight": "Switch to light mode",
    "languageSelect": "Language selection",
    "appearance": "Appearance",
    "language": "Language"
  },
  "language": {
    "chinese": "‰∏≠Êñá",
    "english": "English"
  },
  "pages": {
    "home": {
      "badge": "Latest Tailwind CSS v4 Support",
      "title": "Modern React Template",
      "subtitle": "A modern project scaffold built with React 18 + TypeScript + Vite + Tailwind CSS v4, integrating best practices to let you focus on business development.",
      "getStarted": "Get Started",
      "viewDocs": "View Docs",
      "github": "GitHub",
      "features": {
        "title": "‚ú® Core Features",
        "subtitle": "We carefully selected and integrated the best tools and practices",
        "items": {
          "fast": {
            "title": "‚ö° Lightning Fast",
            "description": "Modern build experience based on Vite and Tailwind CSS v4",
            "badge": "v4"
          },
          "complete": {
            "title": "üîß Complete Setup",
            "description": "TypeScript, ESLint, i18n and more out of the box",
            "badge": "Ready"
          },
          "outOfBox": {
            "title": "üíù Out of the Box",
            "description": "Integrated best practices and common component libraries",
            "badge": "Best"
          },
          "typeSafe": {
            "title": "üõ°Ô∏è Type Safe",
            "description": "Complete TypeScript type definitions and checking",
            "badge": "Safe"
          }
        }
      },
      "techStack": {
        "title": "üõ†Ô∏è Tech Stack",
        "description": "Using the latest and most stable tech stack to ensure long-term maintainability and high performance."
      },
      "messages": {
        "getStarted": "üöÄ Welcome to start using this template!",
        "docsInDev": "üìö Documentation is under development, stay tuned!"
      }
    },
    "about": {
      "title": "About Us",
      "subtitle": "This is a modern React project scaffold, committed to providing developers with the best development experience and project architecture.",
      "features": {
        "title": "Project Features",
        "items": {
          "modern": {
            "title": "Modern Architecture",
            "description": "Built with the latest React 18 and TypeScript, embracing modern development patterns"
          },
          "elegant": {
            "title": "Elegant UI",
            "description": "Beautiful interface and component system crafted with Shadcn/ui + Tailwind CSS v4"
          },
          "dx": {
            "title": "Developer Experience",
            "description": "Vite lightning build, TypeScript type safety, ESLint code standards"
          },
          "outOfBox": {
            "title": "Out of the Box",
            "description": "Pre-configured routing, state management, i18n, theme switching and other common features"
          }
        }
      },
      "timeline": {
        "title": "Development Timeline",
        "items": {
          "init": {
            "title": "Project Initialization",
            "description": "Create basic project structure and configuration"
          },
          "core": {
            "title": "Core Feature Integration",
            "description": "Routing, state management, internationalization, etc."
          },
          "tailwind": {
            "title": "Tailwind CSS v4 Upgrade",
            "description": "Adopt the latest version of Tailwind CSS"
          },
          "optimize": {
            "title": "Continuous Optimization",
            "description": "Performance optimization and developer experience enhancement"
          }
        }
      },
      "techStack": {
        "title": "Tech Stack",
        "description": "We carefully selected the best tools and libraries to ensure the project's modernization, maintainability and development efficiency."
      },
      "projectInfo": {
        "title": "Project Information",
        "version": "Version",
        "lastUpdate": "Last Update",
        "license": "License",
        "author": "Author",
        "github": "GitHub",
        "viewSource": "View Source"
      },
      "thanks": {
        "title": "Thanks",
        "content": "Thanks to all the contributors of open source projects, without your efforts there would be no such wonderful development ecosystem. Also thanks to every developer who uses this template, your feedback makes the project better.",
        "madeWithLove": "Made with Love",
        "starOnGitHub": "Star on GitHub"
      }
    },
    "notFound": {
      "title": "Page Not Found",
      "description": "Sorry, the page you visited does not exist",
      "backHome": "Back to Home"
    },
    "loadingDebug": {
      "title": "Loading Effects Debug Center",
      "subtitle": "Test and debug various loading component effects and performance",
      "autoTest": {
        "message": "Auto testing..."
      },
      "mainLoadingTest": {
        "title": "Main Loading Component Test",
        "durationLabel": "Loading Duration",
        "testMainLoading": "Test Global Loading",
        "testSimpleLoading": "Test Simple Loading",
        "testMessage": "Testing global loading...",
        "startAutoTest": "Start Auto Test",
        "stopAutoTest": "Stop Auto Test",
        "status": {
          "mainLoading": "Global Loading",
          "simpleLoading": "Simple Loading",
          "autoTest": "Auto Test",
          "showing": "Showing",
          "hidden": "Hidden",
          "running": "Running",
          "stopped": "Stopped"
        }
      },
      "globalApi": {
        "title": "Global Loading API",
        "description": "Use global loading controller to trigger loading effects anywhere",
        "asyncTest": {
          "button": "Test Async Operation",
          "message": "Async operation in progress..."
        },
        "delayedTest": {
          "button": "Test Delayed Display",
          "message": "Delayed loading display..."
        },
        "customText": {
          "button": "Custom Text"
        },
        "hide": {
          "button": "Manual Hide"
        },
        "examples": {
          "title": "Code Examples",
          "comments": {
            "basicUsage": "// Basic usage",
            "customText": "// Custom text",
            "asyncWrapper": "// Async operation wrapper"
          }
        }
      },
      "variants": {
        "title": "Loading Style Variants",
        "rotatingRing": "Rotating Ring",
        "bouncingDots": "Bouncing Dots",
        "rhythmBars": "Rhythm Bars"
      },
      "preview": {
        "title": "Simple Loading Component Preview"
      },
      "usage": {
        "title": "Usage Instructions",
        "globalLoading": "Global singleton loading component, can be called anywhere via API",
        "simpleLoading": "Lightweight loading, suitable for component internal or local areas",
        "debugFeatures": "Adjustable duration, manual trigger, automatic cycle testing",
        "styleVariants": "Display different styles of loading animation effects",
        "performance": "Smooth animation effects using React Spring"
      }
    }
  }
}